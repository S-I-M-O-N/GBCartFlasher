#############################################################################
# Makefile for building: gbcflsh.app/Contents/MacOS/gbcflsh
# Generated by qmake (2.01a) (Qt 4.7.3) on: Sun Aug 14 18:55:06 2011
# Project:  gbcf.pro
# Template: app
# Command: /opt/local/bin/qmake -o Makefile gbcf.pro
#############################################################################

####### Compiler, tools and options

CC            = $(CCACHE) /usr/bin/gcc-4.2
CXX           = $(CCACHE) /usr/bin/g++-4.2
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.6 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.6 -Wall -W $(DEFINES)
INCPATH       = -I/opt/local/share/qt4/mkspecs/macx-g++ -I. -I. -I. -I/opt/local/include/QtGui -I/opt/local/include/QtCore -I/opt/local/include
LINK          = $(CCACHE) /usr/bin/g++-4.2
LFLAGS        = -headerpad_max_install_names -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.6
LIBS          = $(SUBLIBS)   -lftd2xx -L/opt/local/lib -lQtGui -lQtCore 
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /opt/local/bin/qmake
INTERFACE     = cdecl
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.6

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = src/About.cpp \
		src/EraseThread.cpp \
		src/gbcflsh.cpp \
		src/Gui.cpp \
		src/Logic.cpp \
		src/ReadFlashThread.cpp \
		src/ReadRamThread.cpp \
		src/Settings.cpp \
		src/WriteFlashThread.cpp \
		src/WriteRamThread.cpp \
		src/USBPortWin.cpp moc_About.cpp \
		moc_AbstractPort.cpp \
		moc_EraseThread.cpp \
		moc_Gui.cpp \
		moc_Logic.cpp \
		moc_ReadFlashThread.cpp \
		moc_ReadRamThread.cpp \
		moc_Settings.cpp \
		moc_WriteFlashThread.cpp \
		moc_WriteRamThread.cpp \
		moc_USBPortWin.cpp
OBJECTS       = About.o \
		EraseThread.o \
		gbcflsh.o \
		Gui.o \
		Logic.o \
		ReadFlashThread.o \
		ReadRamThread.o \
		Settings.o \
		WriteFlashThread.o \
		WriteRamThread.o \
		USBPortWin.o \
		moc_About.o \
		moc_AbstractPort.o \
		moc_EraseThread.o \
		moc_Gui.o \
		moc_Logic.o \
		moc_ReadFlashThread.o \
		moc_ReadRamThread.o \
		moc_Settings.o \
		moc_WriteFlashThread.o \
		moc_WriteRamThread.o \
		moc_USBPortWin.o
DIST          = /opt/local/share/qt4/mkspecs/common/unix.conf \
		/opt/local/share/qt4/mkspecs/common/mac.conf \
		/opt/local/share/qt4/mkspecs/common/mac-g++.conf \
		/opt/local/share/qt4/mkspecs/qconfig.pri \
		/opt/local/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/opt/local/share/qt4/mkspecs/features/qt_functions.prf \
		/opt/local/share/qt4/mkspecs/features/qt_config.prf \
		/opt/local/share/qt4/mkspecs/features/exclusive_builds.prf \
		/opt/local/share/qt4/mkspecs/features/default_pre.prf \
		/opt/local/share/qt4/mkspecs/features/mac/default_pre.prf \
		/opt/local/share/qt4/mkspecs/features/release.prf \
		/opt/local/share/qt4/mkspecs/features/default_post.prf \
		/opt/local/share/qt4/mkspecs/features/mac/default_post.prf \
		/opt/local/share/qt4/mkspecs/features/mac/x86_64.prf \
		/opt/local/share/qt4/mkspecs/features/mac/objective_c.prf \
		/opt/local/share/qt4/mkspecs/features/warn_on.prf \
		/opt/local/share/qt4/mkspecs/features/qt.prf \
		/opt/local/share/qt4/mkspecs/features/unix/thread.prf \
		/opt/local/share/qt4/mkspecs/features/moc.prf \
		/opt/local/share/qt4/mkspecs/features/mac/rez.prf \
		/opt/local/share/qt4/mkspecs/features/mac/sdk.prf \
		/opt/local/share/qt4/mkspecs/features/resources.prf \
		/opt/local/share/qt4/mkspecs/features/uic.prf \
		/opt/local/share/qt4/mkspecs/features/yacc.prf \
		/opt/local/share/qt4/mkspecs/features/lex.prf \
		/opt/local/share/qt4/mkspecs/features/include_source_dir.prf \
		gbcf.pro
QMAKE_TARGET  = gbcflsh
DESTDIR       = 
TARGET        = gbcflsh.app/Contents/MacOS/gbcflsh

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-O2 \
		-arch \
		x86_64 \
		-Xarch_x86_64 \
		-mmacosx-version-min=10.6 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile gbcflsh.app/Contents/PkgInfo gbcflsh.app/Contents/Resources/empty.lproj gbcflsh.app/Contents/Info.plist gbcflsh.app/Contents/Resources/gbcf.icns $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) gbcflsh.app/Contents/MacOS/ || $(MKDIR) gbcflsh.app/Contents/MacOS/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: gbcf.pro  /opt/local/share/qt4/mkspecs/macx-g++/qmake.conf /opt/local/share/qt4/mkspecs/common/unix.conf \
		/opt/local/share/qt4/mkspecs/common/mac.conf \
		/opt/local/share/qt4/mkspecs/common/mac-g++.conf \
		/opt/local/share/qt4/mkspecs/qconfig.pri \
		/opt/local/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/opt/local/share/qt4/mkspecs/features/qt_functions.prf \
		/opt/local/share/qt4/mkspecs/features/qt_config.prf \
		/opt/local/share/qt4/mkspecs/features/exclusive_builds.prf \
		/opt/local/share/qt4/mkspecs/features/default_pre.prf \
		/opt/local/share/qt4/mkspecs/features/mac/default_pre.prf \
		/opt/local/share/qt4/mkspecs/features/release.prf \
		/opt/local/share/qt4/mkspecs/features/default_post.prf \
		/opt/local/share/qt4/mkspecs/features/mac/default_post.prf \
		/opt/local/share/qt4/mkspecs/features/mac/x86_64.prf \
		/opt/local/share/qt4/mkspecs/features/mac/objective_c.prf \
		/opt/local/share/qt4/mkspecs/features/warn_on.prf \
		/opt/local/share/qt4/mkspecs/features/qt.prf \
		/opt/local/share/qt4/mkspecs/features/unix/thread.prf \
		/opt/local/share/qt4/mkspecs/features/moc.prf \
		/opt/local/share/qt4/mkspecs/features/mac/rez.prf \
		/opt/local/share/qt4/mkspecs/features/mac/sdk.prf \
		/opt/local/share/qt4/mkspecs/features/resources.prf \
		/opt/local/share/qt4/mkspecs/features/uic.prf \
		/opt/local/share/qt4/mkspecs/features/yacc.prf \
		/opt/local/share/qt4/mkspecs/features/lex.prf \
		/opt/local/share/qt4/mkspecs/features/include_source_dir.prf \
		/opt/local/lib/libQtGui.prl \
		/opt/local/lib/libQtCore.prl
	$(QMAKE) -o Makefile gbcf.pro
/opt/local/share/qt4/mkspecs/common/unix.conf:
/opt/local/share/qt4/mkspecs/common/mac.conf:
/opt/local/share/qt4/mkspecs/common/mac-g++.conf:
/opt/local/share/qt4/mkspecs/qconfig.pri:
/opt/local/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/opt/local/share/qt4/mkspecs/features/qt_functions.prf:
/opt/local/share/qt4/mkspecs/features/qt_config.prf:
/opt/local/share/qt4/mkspecs/features/exclusive_builds.prf:
/opt/local/share/qt4/mkspecs/features/default_pre.prf:
/opt/local/share/qt4/mkspecs/features/mac/default_pre.prf:
/opt/local/share/qt4/mkspecs/features/release.prf:
/opt/local/share/qt4/mkspecs/features/default_post.prf:
/opt/local/share/qt4/mkspecs/features/mac/default_post.prf:
/opt/local/share/qt4/mkspecs/features/mac/x86_64.prf:
/opt/local/share/qt4/mkspecs/features/mac/objective_c.prf:
/opt/local/share/qt4/mkspecs/features/warn_on.prf:
/opt/local/share/qt4/mkspecs/features/qt.prf:
/opt/local/share/qt4/mkspecs/features/unix/thread.prf:
/opt/local/share/qt4/mkspecs/features/moc.prf:
/opt/local/share/qt4/mkspecs/features/mac/rez.prf:
/opt/local/share/qt4/mkspecs/features/mac/sdk.prf:
/opt/local/share/qt4/mkspecs/features/resources.prf:
/opt/local/share/qt4/mkspecs/features/uic.prf:
/opt/local/share/qt4/mkspecs/features/yacc.prf:
/opt/local/share/qt4/mkspecs/features/lex.prf:
/opt/local/share/qt4/mkspecs/features/include_source_dir.prf:
/opt/local/lib/libQtGui.prl:
/opt/local/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile gbcf.pro

gbcflsh.app/Contents/PkgInfo: 
	@$(CHK_DIR_EXISTS) gbcflsh.app/Contents || $(MKDIR) gbcflsh.app/Contents 
	@$(DEL_FILE) gbcflsh.app/Contents/PkgInfo
	@echo "APPL????" >gbcflsh.app/Contents/PkgInfo
gbcflsh.app/Contents/Resources/empty.lproj: 
	@$(CHK_DIR_EXISTS) gbcflsh.app/Contents/Resources || $(MKDIR) gbcflsh.app/Contents/Resources 
	@touch gbcflsh.app/Contents/Resources/empty.lproj
	
gbcflsh.app/Contents/Info.plist: 
	@$(CHK_DIR_EXISTS) gbcflsh.app/Contents || $(MKDIR) gbcflsh.app/Contents 
	@$(DEL_FILE) gbcflsh.app/Contents/Info.plist
	@sed -e "s,@ICON@,gbcf.icns,g" -e "s,@EXECUTABLE@,gbcflsh,g" -e "s,@TYPEINFO@,????,g" /opt/local/share/qt4/mkspecs/macx-g++/Info.plist.app >gbcflsh.app/Contents/Info.plist
gbcflsh.app/Contents/Resources/gbcf.icns: gbcf.icns
	@$(CHK_DIR_EXISTS) gbcflsh.app/Contents/Resources/ || $(MKDIR) gbcflsh.app/Contents/Resources/ 
	@$(DEL_FILE) gbcflsh.app/Contents/Resources/gbcf.icns
	@$(COPY_FILE) gbcf.icns gbcflsh.app/Contents/Resources/gbcf.icns
dist: 
	@$(CHK_DIR_EXISTS) .tmp/gbcflsh1.0.0 || $(MKDIR) .tmp/gbcflsh1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/gbcflsh1.0.0/ && $(COPY_FILE) --parents src/About.h src/AbstractPort.h src/Console.h src/const.h src/EraseThread.h src/Gui.h src/Logic.h src/ReadFlashThread.h src/ReadRamThread.h src/Settings.h src/WriteFlashThread.h src/WriteRamThread.h src/about.xpm src/flasher.xpm src/gbcf.xpm src/USBPortWin.h .tmp/gbcflsh1.0.0/ && $(COPY_FILE) --parents src/About.cpp src/EraseThread.cpp src/gbcflsh.cpp src/Gui.cpp src/Logic.cpp src/ReadFlashThread.cpp src/ReadRamThread.cpp src/Settings.cpp src/WriteFlashThread.cpp src/WriteRamThread.cpp src/USBPortWin.cpp .tmp/gbcflsh1.0.0/ && $(COPY_FILE) --parents src/gbcflsh_english.ts src/gbcflsh_french.ts src/gbcflsh_german.ts src/gbcflsh_polish.ts .tmp/gbcflsh1.0.0/ && (cd `dirname .tmp/gbcflsh1.0.0` && $(TAR) gbcflsh1.0.0.tar gbcflsh1.0.0 && $(COMPRESS) gbcflsh1.0.0.tar) && $(MOVE) `dirname .tmp/gbcflsh1.0.0`/gbcflsh1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/gbcflsh1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r gbcflsh.app
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all: moc_About.cpp moc_AbstractPort.cpp moc_EraseThread.cpp moc_Gui.cpp moc_Logic.cpp moc_ReadFlashThread.cpp moc_ReadRamThread.cpp moc_Settings.cpp moc_WriteFlashThread.cpp moc_WriteRamThread.cpp moc_USBPortWin.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_About.cpp moc_AbstractPort.cpp moc_EraseThread.cpp moc_Gui.cpp moc_Logic.cpp moc_ReadFlashThread.cpp moc_ReadRamThread.cpp moc_Settings.cpp moc_WriteFlashThread.cpp moc_WriteRamThread.cpp moc_USBPortWin.cpp
moc_About.cpp: src/About.h
	/opt/local/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ src/About.h -o moc_About.cpp

moc_AbstractPort.cpp: src/AbstractPort.h
	/opt/local/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ src/AbstractPort.h -o moc_AbstractPort.cpp

moc_EraseThread.cpp: src/AbstractPort.h \
		src/Logic.h \
		src/const.h \
		src/EraseThread.h
	/opt/local/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ src/EraseThread.h -o moc_EraseThread.cpp

moc_Gui.cpp: src/Settings.h \
		src/const.h \
		src/Console.h \
		src/Logic.h \
		src/AbstractPort.h \
		src/About.h \
		src/ReadFlashThread.h \
		src/WriteFlashThread.h \
		src/EraseThread.h \
		src/ReadRamThread.h \
		src/WriteRamThread.h \
		src/Gui.h
	/opt/local/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ src/Gui.h -o moc_Gui.cpp

moc_Logic.cpp: src/const.h \
		src/AbstractPort.h \
		src/Logic.h
	/opt/local/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ src/Logic.h -o moc_Logic.cpp

moc_ReadFlashThread.cpp: src/AbstractPort.h \
		src/Logic.h \
		src/const.h \
		src/ReadFlashThread.h
	/opt/local/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ src/ReadFlashThread.h -o moc_ReadFlashThread.cpp

moc_ReadRamThread.cpp: src/AbstractPort.h \
		src/Logic.h \
		src/const.h \
		src/ReadRamThread.h
	/opt/local/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ src/ReadRamThread.h -o moc_ReadRamThread.cpp

moc_Settings.cpp: src/const.h \
		src/Settings.h
	/opt/local/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ src/Settings.h -o moc_Settings.cpp

moc_WriteFlashThread.cpp: src/AbstractPort.h \
		src/Logic.h \
		src/const.h \
		src/WriteFlashThread.h
	/opt/local/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ src/WriteFlashThread.h -o moc_WriteFlashThread.cpp

moc_WriteRamThread.cpp: src/AbstractPort.h \
		src/Logic.h \
		src/const.h \
		src/WriteRamThread.h
	/opt/local/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ src/WriteRamThread.h -o moc_WriteRamThread.cpp

moc_USBPortWin.cpp: src/AbstractPort.h \
		src/USBPortWin.h
	/opt/local/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ src/USBPortWin.h -o moc_USBPortWin.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

About.o: src/About.cpp src/About.h \
		src/about.xpm \
		src/const.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o About.o src/About.cpp

EraseThread.o: src/EraseThread.cpp src/EraseThread.h \
		src/AbstractPort.h \
		src/Logic.h \
		src/const.h \
		src/Settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EraseThread.o src/EraseThread.cpp

gbcflsh.o: src/gbcflsh.cpp src/Gui.h \
		src/Settings.h \
		src/const.h \
		src/Console.h \
		src/Logic.h \
		src/AbstractPort.h \
		src/About.h \
		src/ReadFlashThread.h \
		src/WriteFlashThread.h \
		src/EraseThread.h \
		src/ReadRamThread.h \
		src/WriteRamThread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gbcflsh.o src/gbcflsh.cpp

Gui.o: src/Gui.cpp src/Gui.h \
		src/Settings.h \
		src/const.h \
		src/Console.h \
		src/Logic.h \
		src/AbstractPort.h \
		src/About.h \
		src/ReadFlashThread.h \
		src/WriteFlashThread.h \
		src/EraseThread.h \
		src/ReadRamThread.h \
		src/WriteRamThread.h \
		src/USBPortWin.h \
		src/flasher.xpm \
		src/gbcf.xpm
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Gui.o src/Gui.cpp

Logic.o: src/Logic.cpp src/Logic.h \
		src/const.h \
		src/AbstractPort.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Logic.o src/Logic.cpp

ReadFlashThread.o: src/ReadFlashThread.cpp src/ReadFlashThread.h \
		src/AbstractPort.h \
		src/Logic.h \
		src/const.h \
		src/Settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ReadFlashThread.o src/ReadFlashThread.cpp

ReadRamThread.o: src/ReadRamThread.cpp src/ReadRamThread.h \
		src/AbstractPort.h \
		src/Logic.h \
		src/const.h \
		src/Settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ReadRamThread.o src/ReadRamThread.cpp

Settings.o: src/Settings.cpp src/Settings.h \
		src/const.h \
		src/Gui.h \
		src/Console.h \
		src/Logic.h \
		src/AbstractPort.h \
		src/About.h \
		src/ReadFlashThread.h \
		src/WriteFlashThread.h \
		src/EraseThread.h \
		src/ReadRamThread.h \
		src/WriteRamThread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Settings.o src/Settings.cpp

WriteFlashThread.o: src/WriteFlashThread.cpp src/WriteFlashThread.h \
		src/AbstractPort.h \
		src/Logic.h \
		src/const.h \
		src/Settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o WriteFlashThread.o src/WriteFlashThread.cpp

WriteRamThread.o: src/WriteRamThread.cpp src/WriteRamThread.h \
		src/AbstractPort.h \
		src/Logic.h \
		src/const.h \
		src/Settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o WriteRamThread.o src/WriteRamThread.cpp

USBPortWin.o: src/USBPortWin.cpp src/const.h \
		src/USBPortWin.h \
		src/AbstractPort.h \
		src/Settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o USBPortWin.o src/USBPortWin.cpp

moc_About.o: moc_About.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_About.o moc_About.cpp

moc_AbstractPort.o: moc_AbstractPort.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_AbstractPort.o moc_AbstractPort.cpp

moc_EraseThread.o: moc_EraseThread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_EraseThread.o moc_EraseThread.cpp

moc_Gui.o: moc_Gui.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Gui.o moc_Gui.cpp

moc_Logic.o: moc_Logic.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Logic.o moc_Logic.cpp

moc_ReadFlashThread.o: moc_ReadFlashThread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ReadFlashThread.o moc_ReadFlashThread.cpp

moc_ReadRamThread.o: moc_ReadRamThread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ReadRamThread.o moc_ReadRamThread.cpp

moc_Settings.o: moc_Settings.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Settings.o moc_Settings.cpp

moc_WriteFlashThread.o: moc_WriteFlashThread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_WriteFlashThread.o moc_WriteFlashThread.cpp

moc_WriteRamThread.o: moc_WriteRamThread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_WriteRamThread.o moc_WriteRamThread.cpp

moc_USBPortWin.o: moc_USBPortWin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_USBPortWin.o moc_USBPortWin.cpp

####### Install

install_langpack: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/share/gbcf/ || $(MKDIR) $(INSTALL_ROOT)/usr/share/gbcf/ 
	lrelease gbcf.pro
	-$(INSTALL_FILE) /Users/bazz/Projects/gameboy/gbcflsh/src/gbcflsh_english.qm $(INSTALL_ROOT)/usr/share/gbcf/
	-$(INSTALL_FILE) /Users/bazz/Projects/gameboy/gbcflsh/src/gbcflsh_french.qm $(INSTALL_ROOT)/usr/share/gbcf/
	-$(INSTALL_FILE) /Users/bazz/Projects/gameboy/gbcflsh/src/gbcflsh_german.qm $(INSTALL_ROOT)/usr/share/gbcf/
	-$(INSTALL_FILE) /Users/bazz/Projects/gameboy/gbcflsh/src/gbcflsh_polish.qm $(INSTALL_ROOT)/usr/share/gbcf/


uninstall_langpack:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/usr/share/gbcf/gbcflsh_english.qm 
	 -$(DEL_FILE) -r $(INSTALL_ROOT)/usr/share/gbcf/gbcflsh_french.qm 
	 -$(DEL_FILE) -r $(INSTALL_ROOT)/usr/share/gbcf/gbcflsh_german.qm 
	 -$(DEL_FILE) -r $(INSTALL_ROOT)/usr/share/gbcf/gbcflsh_polish.qm
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/share/gbcf/ 


install_config: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/Users/bazz/.config/GBCFProject/ || $(MKDIR) $(INSTALL_ROOT)/Users/bazz/.config/GBCFProject/ 
	-$(INSTALL_FILE) /Users/bazz/Projects/gameboy/gbcflsh/GameBoyCartFlasher.conf $(INSTALL_ROOT)/Users/bazz/.config/GBCFProject/


uninstall_config:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/Users/bazz/.config/GBCFProject/GameBoyCartFlasher.conf
	-$(DEL_DIR) $(INSTALL_ROOT)/Users/bazz/.config/GBCFProject/ 


install:  install_langpack install_config  FORCE

uninstall: uninstall_langpack uninstall_config   FORCE

FORCE:

